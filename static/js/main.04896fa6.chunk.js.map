{"version":3,"sources":["components/Task.js","components/TaskList.js","components/TaskForm.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","removeTask","className","onClick","TaskList","tasks","map","TaskForm","addTask","useState","setTask","onSubmit","e","preventDefault","value","onChange","target","placeholder","App","setTasks","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","id","taskToDelete","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEMA,EAAO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACpB,OACE,sBAAKC,UAAU,8EAAf,UACGF,EACD,wBAAQG,QAAS,kBAAMF,EAAWD,IAAOE,UAAU,GAAnD,mBCHAE,EAAW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOJ,EAAiB,EAAjBA,WACzB,OACE,qBAAKC,UAAU,gBAAf,SACE,6BACGG,EAAMC,KAAI,SAACN,GAAD,OACT,oBAAIE,UAAU,8CAAd,SACE,cAAC,EAAD,CAAiBF,KAAMA,EAAMC,WAAYA,GAA9BD,aCPjBO,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACRC,mBAAS,IADD,mBACzBT,EADyB,KACnBU,EADmB,KAShC,OACE,sBAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFL,EAAQR,GACRU,EAAQ,KAIR,SACE,uBACEI,MAAOd,EAAMe,SAAU,SAACH,GAAD,OAAOF,EAAQE,EAAEI,OAAOF,QAC/CZ,UAAU,8DACVe,YAAY,sBCqCLC,MAhDf,WAAgB,IAAD,EACaT,mBAAS,IADtB,mBACNJ,EADM,KACCc,EADD,KAwBb,OAZAC,qBAAU,WACR,IAAMf,EAAQgB,KAAKC,MAAMC,aAAaC,QAAQ,UAC1CnB,GACFc,EAASd,KAEV,IAGHe,qBAAU,WACRG,aAAaE,QAAQ,QAASJ,KAAKK,UAAUrB,MAC5C,CAACA,IAGF,qBAAKH,UAAU,kCAAf,SACE,qBAAKA,UAAU,mEAAf,SACE,sBAAKyB,GAAG,gBAAgBzB,UAAU,4CAAlC,UACE,oBAAIA,UAAU,mFAAd,oBACA,8BACE,cAAC,EAAD,CAAUM,QA3BJ,SAACR,GACfmB,EAAS,GAAD,mBAAKd,GAAL,CAAYL,UA4Bd,qBAAK2B,GAAG,WAAWzB,UAAU,mDAA7B,SACE,cAAC,EAAD,CAAUG,MAAOA,EAAOJ,WA1Bf,SAAC2B,GAClBT,EAASd,EAAMwB,QAAO,SAAC7B,GAAD,OAAU4B,IAAiB5B,WA2B3C,sBAAK2B,GAAG,aAAazB,UAAU,uBAA/B,UACE,oBAAGA,UAAU,6BAAb,UAA2CG,EAAMyB,OAAjD,iBACA,qBAAKH,GAAG,cAAczB,UAAU,gBC9B7B6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04896fa6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Task = ({ task, removeTask }) => {\n  return (\n    <div className=\"text-lg mx-4 text-light-VeryDarkGrayishBlue flex justify-between text-right\">\n      {task}\n      <button onClick={() => removeTask(task)} className=\"\">X</button>\n    </div>\n  );\n};\n\nexport { Task as default };","import React from 'react'\nimport Task from './Task.js'\n\nconst TaskList = ({ tasks, removeTask }) => {\n  return (\n    <div className=\"taskContainer\">\n      <ul>\n        {tasks.map((task) => ( \n          <li className=\"border-b py-4 border-light-LightGrayishBlue\">\n            <Task key={task} task={task} removeTask={removeTask} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { TaskList as default};","import React, { useState } from 'react'\n\nconst TaskForm = ({ addTask }) => {\n  const [task, setTask] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTask(task);\n    setTask(\"\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={task} onChange={(e) => setTask(e.target.value)}\n        className=\"p-4 text-2xl rounded-md w-full shadow-md focus:outline-none\"\n        placeholder=\"Add a new task\" />\n      \n    </form>\n  )\n}\n\nexport { TaskForm as default};","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from \"./components/TaskForm\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = (task) => {\n    setTasks([...tasks, task]);\n  }\n\n  const removeTask = (taskToDelete) => {\n    setTasks(tasks.filter((task) => taskToDelete !== task));\n  }\n\n  // Load any existing tasks\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }, []);\n\n  // Save the current tasks to localstorage\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <div className=\"bg-light-VeryLightGray h-screen\">\n      <div className=\"bg-top bg-gradient-to-r from-gradients-b to-gradients-a max-h-60\">\n        <div id=\"mainContainer\" className=\"mx-5 md:w-8/12 md:mx-auto max-w-screen-lg\">\n          <h1 className=\"pt-10 mb-4 text-left text-4xl tracking-widest font-bold text-light-VeryLightGray\">TASKIE</h1>\n          <div>\n            <TaskForm addTask={addTask} />\n          </div>\n          <div id=\"taskList\" className=\"bg-white mt-10 max-h-screen rounded-md shadow-md\">\n            <TaskList tasks={tasks} removeTask={removeTask} />\n          </div>\n          <div id=\"bottomMenu\" className=\"flex justify-between\">\n            <p className=\"text-light-DarkGrayishBlue\">{tasks.length} tasks left</p>\n            <div id=\"taskFilters\" className=\"\">\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}