{"version":3,"sources":["components/Task.js","components/TaskList.js","components/TaskForm.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","removeTask","index","completeTask","className","taskComplete","onClick","e","stopPropagation","TaskList","tasks","map","TaskForm","addTask","useState","setTask","onSubmit","preventDefault","value","onChange","target","placeholder","App","setTasks","darkMode","setDarkMode","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","id","newTask","taskToDelete","filter","newTasks","result","length","countCompleted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c10fbcb4.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, index, removeTask, completeTask }) => {\n  return (\n    <div className=\"text-lg mx-4 text-light-VeryDarkGrayishBlue flex justify-between text-right\">\n      <button\n        className={\n          task.taskComplete\n            ? \"focus:outline-none w-9 h-9 border-2 text-2xl text-white border-light-BrightBlue rounded-full bg-gradients-b bg-gradient-to-br to-gradients-a\"\n            : \"focus:outline-none w-9 h-9 border-2 text-2xl text-dark-LightGrayishBlue text-opacity-0 border-light-DarkGrayishBlue rounded-full transition-colors hover:bg-light-LightGrayishBlue\"\n        }\n      >\n        <FaCheck className=\"mx-auto my-auto text-sm\" />\n      </button>\n      <div\n        className={\n          \"dark:text-dark-LightGrayishBlue \" +\n          (task.taskComplete ? \"text-2xl opacity-50 line-through\" : \"text-2xl\")\n        }\n      >\n        {task.task}\n      </div>\n      <button\n        onClick={(e) => {\n          removeTask(task);\n          e.stopPropagation();\n        }}\n        className=\"dark:text-dark-LightGrayishBlue opacity-40 hover:opacity-100\"\n      >\n        <FaTimes />\n      </button>\n    </div>\n  );\n};\n\nexport { Task as default };\n","import React from \"react\";\nimport Task from \"./Task.js\";\n\nconst TaskList = ({ tasks, removeTask, completeTask }) => {\n  return (\n    <div className=\"taskContainer shadow-2xl\">\n      <ul>\n        {tasks.map((task, index) => (\n          <li\n            onClick={() => completeTask(index)}\n            className={\n              task.taskComplete\n                ? \"bg-light-BrightBlue bg-opacity-25 border-b py-4 border-light-LightGrayishBlue cursor-pointer\"\n                : \"border-b py-4 border-light-LightGrayishBlue cursor-pointer\"\n            }\n          >\n            <Task\n              key={task}\n              index={index}\n              task={task}\n              removeTask={removeTask}\n              completeTask={completeTask}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { TaskList as default };\n","import React, { useState } from \"react\";\n\nconst TaskForm = ({ addTask }) => {\n  const [task, setTask] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    if (!task) return;\n    e.preventDefault();\n    addTask(task);\n    setTask(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n        className=\"p-4 text-2xl dark:bg-dark-VeryDarkDesaturatedBlue dark:text-white rounded-md w-full shadow-md focus:outline-none\"\n        placeholder=\"Add a new task\"\n      />\n    </form>\n  );\n};\n\nexport { TaskForm as default };\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport { FaSun, FaMoon } from \"react-icons/fa\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n\n  const addTask = (task) => {\n    const newTask = [...tasks, { task, taskComplete: false }];\n    setTasks(newTask);\n  };\n\n  const removeTask = (taskToDelete) => {\n    setTasks(tasks.filter((task) => taskToDelete !== task));\n  };\n\n  const completeTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].taskComplete = !newTasks[index].taskComplete;\n    setTasks(newTasks);\n  };\n\n  const countCompleted = () => {\n    const result = tasks.filter(\n      ({ taskComplete }) => taskComplete === false\n    ).length;\n    return result === 1\n      ? result + \" task remaining\"\n      : result + \" tasks remaining\";\n  };\n\n  // Load any existing tasks\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }, []);\n\n  // Save the current tasks to localstorage\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <div className={darkMode ? \"dark\" : \"\"}>\n      <div\n        className={\"bg-light-VeryLightGray dark:bg-dark-VeryDarkBlue h-screen\"}\n      >\n        <div className=\"bg-top bg-gradient-to-r from-gradients-b to-gradients-a max-h-60\">\n          <div\n            id=\"mainContainer\"\n            className=\"mx-5 md:w-6/12 md:mx-auto max-w-screen-lg\"\n          >\n            <div className=\"flex flex-row justify-between items-baseline\">\n              <h1 className=\"pt-10 mb-4 text-left text-4xl tracking-widest font-extrabold text-light-VeryLightGray\">\n                TASKIE\n              </h1>\n              <button\n                className=\"rounded-full p-1 border border-light-VeryLightGray border-opacity-50 focus:outline-none\"\n                onClick={() => setDarkMode(!darkMode)}\n              >\n                {darkMode ? (\n                  <FaSun className=\"text-white text-2xl\" />\n                ) : (\n                  <FaMoon className=\"text-white text-2xl\" />\n                )}\n              </button>\n            </div>\n            <div>\n              <TaskForm addTask={addTask} />\n            </div>\n            <div\n              id=\"taskList\"\n              className=\"bg-white dark:bg-dark-VeryDarkDesaturatedBlue mt-10 max-h-screen rounded-md shadow-md\"\n            >\n              <TaskList\n                tasks={tasks}\n                removeTask={removeTask}\n                completeTask={completeTask}\n              />\n            </div>\n            <div id=\"bottomMenu\" className=\"flex justify-between mt-4\">\n              <p className=\"text-light-DarkGrayishBlue\">{countCompleted()}</p>\n              <div id=\"taskFilters\" className=\"\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}